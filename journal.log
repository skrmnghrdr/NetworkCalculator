


Sept 25, 1546hrs,
Noticed some subnets are not populating right
It was printing out the opposite way, so, we have to fix it.


Oct 3, Post Helene. Georgia Nerf, 1204hrs
Fixed the subnetting table for they were printing the opposite way,
added the /0 manually at the end to keep the table mapping easy.

Renamed Hostcalculator to hostcalculator

cleaned the working space before starting to work on NFLB calculator


Oct 4, 2024 Friday night. 2330hrs
Added the cidr to fullsubnet mask feature

Oct 5 2024. Saturday night. 
Realized that I did not need the binary of the octets, I could have just used an "and" operand 
to use anding to them.

2211hrs. Took me hours to debug and realize that the "and" does not equal to & (bitwise) operator.
I did some googling and found out they're different, after solving the issue, i compressed the whole method
into a one liner


Oct 6 2024 1000hrs
took me hours to realize that < fills from right and > fills from left :(, fixed the network address
            1145hrs
Down to the last two remaining tasks of the script would be to figure out how to do the carry over or the
borrowing, I might result into bit by bit addition. it works until you get to the 0 or the 255 where you need to
borrow a bit, that's the only thing missing on the script before it's laid to rest and I start a new project with flask





Trash can:

Old codes that I might need to reuse someday

        """
        self.subnet = subnet
        self.ip = ["{:<08}".format(bin(int(x))[2:]) for x in ip.split('.')]
        
        self.networkaddress = ""
        joined_ip = ''.join(self.ip)
        joined_subnet = ''.join(self.subnet)

        for i in range(0, len(joined_subnet) ):#its 32 bits long anyways
            print(joined_ip[i], joined_subnet[i])
            print(joined_ip[i] and joined_subnet[i])

            #took me hours to debug that "and" does not work like "&"
            #I WAS LOOKING FOR BITIWISE OPERATOR
            self.networkaddress += (joined_subnet[i] & joined_ip[i])
        """